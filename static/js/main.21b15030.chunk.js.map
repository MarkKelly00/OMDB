{"version":3,"sources":["components/Container.js","components/Row.js","components/Col.js","components/Card.js","utils/movieContext.js","components/SearchForm.js","components/Nomination.js","components/MovieDetail.js","components/Footer.js","utils/API.js","components/OmdbContainer.js","App.js","index.js"],"names":["Container","props","console","log","children","className","fluid","Row","Col","size","split","map","join","Card","heading","MovieContext","React","createContext","result","search","nominated","handleInputChange","handleFormSubmit","handleClick","SearchForm","Consumer","htmlFor","onChange","value","name","type","placeholder","id","onClick","NominationList","style","margin","fontSize","title","i","padding","height","width","float","MovieDetail","useState","useContext","useMovieContext","Title","Poster","Director","Genre","Released","alt","src","Footer","Date","getFullYear","query","axios","get","OmdbContainer","searchMovies","API","then","res","setState","data","catch","err","event","target","tempArr","state","length","shift","preventDefault","index","window","confirm","splice","bind","this","Provider","Nomination","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21b15030.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  console.log('props children ', props.children);\r\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>\r\n    {props.children}\r\n    </div>;\r\n\r\n\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\n\r\nfunction Row(props) {\r\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\r\n}\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\n\r\nfunction Col(props) {\r\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n\r\n  return (\r\n    <div className={size}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Col;\r\n","import React from \"react\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <h2>{props.heading}</h2>\r\n      </div>\r\n      <div className=\"card-body\">{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useContext } from \"react\";\r\n\r\n// const [nominatedArr, setNominatedArr] = useState([])\r\n\r\nconst MovieContext = React.createContext({\r\n  result: {},\r\n  search: \"\",\r\n  nominated: [],\r\n  handleInputChange: () => {},\r\n  handleFormSubmit: () => {},\r\n  handleClick: () => {}\r\n});\r\n\r\n\r\nexport function useMovieContext(){\r\n  const { result, search, handleInputChange, handleFormSubmit, handleClick } = useContext(MovieContext);\r\n\r\n  return {result, search, handleInputChange, handleFormSubmit, handleClick}\r\n}\r\n\r\nexport default MovieContext;\r\n","import React from \"react\";\r\nimport MovieContext from \"../utils/movieContext\";\r\n\r\nfunction SearchForm() {\r\n  return (\r\n    <MovieContext.Consumer>\r\n      {({search, handleInputChange, handleFormSubmit}) => (\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"search\">Search:</label>\r\n            <input\r\n              onChange={handleInputChange}\r\n              value={search}\r\n              name=\"search\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search For a Movie\"\r\n              id=\"search\"\r\n            />\r\n            <br />\r\n            <button onClick={handleFormSubmit} className=\"btn btn-primary\">\r\n              Search\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </MovieContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\n\r\nfunction NominationList({ handleClick, nominated  }) {\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <br />\r\n      <p style={{ margin: \"0 auto\", fontSize: \"20px\" }}>\r\n        {nominated.map((title, i) => (\r\n          <li key={i} style={{\r\n            margin: \"0 auto\",\r\n            padding: 1\r\n          }}>\r\n            {title}{\" \"}\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => handleClick(nominated, i)}\r\n              style={{\r\n                height: \"30px\",\r\n                width: \"20px\",\r\n                margin: \"0 auto\",\r\n                float: \"right\",\r\n                padding: 1\r\n              }}\r\n            >\r\n              X\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </p>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NominationList;\r\n","import React, { useState } from \"react\";\r\nimport MovieContext from \"../utils/movieContext\";\r\nimport {useMovieContext} from \"../utils/movieContext.js\"\r\n\r\nfunction MovieDetail(nominated) {\r\n  console.log('try props ', nominated);\r\n  const [title, setTitle] = useState(nominated);\r\n  console.log('the state is now ', title);\r\n  const {handleInputChange} = useMovieContext();\r\n\r\n\r\n\r\n  return (\r\n    <MovieContext.Consumer >\r\n      {({result: {Title, Poster, Director, Genre, Released}}) => (\r\n        <div className=\"text-center\">\r\n          <img alt={Title} className=\"img-fluid\" src={Poster} style={{ margin: \"0 auto\" }} />\r\n            <h3>Director: {Director}</h3>\r\n            <h3>Genre: {Genre}</h3>\r\n            <h3>Released: {Released}</h3>\r\n          <button className=\"btn btn-success\" onClick={handleInputChange} name=\"nominated\" value={Title}>Nominate</button>\r\n        </div>\r\n      )}\r\n    </MovieContext.Consumer>\r\n  );\r\n}\r\n\r\n\r\nexport default MovieDetail;\r\n","import React from \"react\";\r\nimport \"../../src/index.css\";\r\n\r\nconst Footer = () => (\r\n    <div className=\"footer\">\r\n      <p>&copy; {new Date().getFullYear()} Mark Kelly</p>\r\n    </div>\r\n  );\r\n  \r\n  export default Footer;","import axios from \"axios\";\r\nconst BASEURL = \"https://www.omdbapi.com/?t=\";\r\nconst APIKEY = \"&apikey=trilogy\";\r\n\r\nexport default {\r\n  search: function(query) {\r\n    return axios.get(BASEURL + query + APIKEY);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Container from \"./Container\";\r\nimport Row from \"./Row\";\r\nimport Col from \"./Col\";\r\nimport Card from \"./Card\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport NominationList from \"./Nomination\";\r\nimport MovieDetail from \"./MovieDetail\";\r\nimport Footer from './Footer';\r\nimport API from \"../utils/API\";\r\nimport MovieContext from \"../utils/movieContext\";\r\n\r\nclass OmdbContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: {},\r\n      nominated: [],\r\n      search: \"\",\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  // When this component mounts, search for the movie \"The Matrix\"\r\n  componentDidMount() {\r\n    this.searchMovies(\"The Matrix\");\r\n  }\r\n\r\n  searchMovies = (query) => {\r\n    API.search(query)\r\n      .then((res) => this.setState({ result: res.data }))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    // changeNominated(name);\r\n    if ((name === \"nominated\")) {\r\n      let tempArr = [...this.state.nominated];\r\n\r\n      if (tempArr.length >= 5) tempArr.shift();\r\n\r\n      tempArr[tempArr.length] = value;\r\n      this.setState({[name]: tempArr});\r\n    } else {\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  // When the form is submitted, search the OMDB API for the value of `this.state.search`\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.searchMovies(this.state.search);\r\n  };\r\n\r\n  handleClick = (nominated, index) => {\r\n    if(window.confirm(\"Are you sure you want to delete this nominee?\")){\r\n      let title = [...this.state.nominated]\r\n      title.splice(index, 1);\r\n      this.setState({nominated: title})\r\n   }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // Pass state and the two form handler functions into the provider\r\n      <MovieContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          handleInputChange: this.handleInputChange,\r\n          handleFormSubmit: this.handleFormSubmit,\r\n          handleClick: this.handleClick\r\n        }}\r\n      >\r\n        <Container>\r\n          <Row>\r\n            <Col size=\"md-4\">\r\n              <Card heading=\"Search\">\r\n                <SearchForm />\r\n              </Card>\r\n              <br />\r\n              <Card heading=\"Nominated\">\r\n                <NominationList nominated={this.state.nominated} handleClick={this.handleClick} />\r\n              </Card>\r\n            </Col>\r\n            <Col size=\"md-8\">\r\n              <Card\r\n                heading={\r\n                  this.state.result.Title || \"Search for a Movie to Begin\"\r\n                }\r\n              >\r\n                {this.state.result.Title ? (\r\n                  <MovieDetail nominated={this.state.nominated} />\r\n                ) : (\r\n                  <h3>No Results to Display</h3>\r\n                )}\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer />\r\n      </MovieContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OmdbContainer;\r\n","import React from \"react\";\r\nimport OmdbContainer from \"./components/OmdbContainer\";\r\n\r\nfunction App() {\r\n  return <OmdbContainer />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}